@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 98%;

  --foreground: 0 0% 10%;

  --border: 0 0% 88%;

  --card: 0 0% 96%;

  --card-foreground: 0 0% 10%;

  --card-border: 0 0% 93%;

  --sidebar: 0 0% 94%;

  --sidebar-foreground: 0 0% 10%;

  --sidebar-border: 0 0% 90%;

  --sidebar-primary: 258 90% 66%;

  --sidebar-primary-foreground: 0 0% 98%;

  --sidebar-accent: 258 8% 88%;

  --sidebar-accent-foreground: 258 90% 35%;

  --sidebar-ring: 258 90% 66%;

  --popover: 0 0% 92%;

  --popover-foreground: 0 0% 10%;

  --popover-border: 0 0% 88%;

  --primary: 258 90% 66%;

  --primary-foreground: 0 0% 98%;

  --secondary: 0 0% 90%;

  --secondary-foreground: 0 0% 10%;

  --muted: 258 6% 89%;

  --muted-foreground: 0 0% 45%;

  --accent: 258 8% 90%;

  --accent-foreground: 258 90% 35%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 0 0% 98%;

  --input: 0 0% 75%;
  --ring: 258 90% 66%;
  --chart-1: 258 90% 35%;
  --chart-2: 280 85% 40%;
  --chart-3: 240 80% 45%;
  --chart-4: 200 75% 40%;
  --chart-5: 180 70% 35%;

  --font-sans: Inter, system-ui, -apple-system, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: 1.75rem;
  --shadow-2xs: 0px 1px 2px 0px hsl(258 90% 66% / 0.05);
  --shadow-xs: 0px 2px 4px 0px hsl(258 90% 66% / 0.08);
  --shadow-sm: 0px 3px 6px -1px hsl(258 90% 66% / 0.10), 0px 2px 4px -2px hsl(258 90% 66% / 0.08);
  --shadow: 0px 4px 8px -2px hsl(258 90% 66% / 0.12), 0px 2px 4px -2px hsl(258 90% 66% / 0.08);
  --shadow-md: 0px 6px 12px -2px hsl(258 90% 66% / 0.14), 0px 3px 6px -3px hsl(258 90% 66% / 0.10);
  --shadow-lg: 0px 10px 20px -4px hsl(258 90% 66% / 0.16), 0px 4px 8px -4px hsl(258 90% 66% / 0.12);
  --shadow-xl: 0px 16px 32px -6px hsl(258 90% 66% / 0.18), 0px 6px 12px -6px hsl(258 90% 66% / 0.14);
  --shadow-2xl: 0px 24px 48px -8px hsl(258 90% 66% / 0.20);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  /* Athena Luxury Color System */
  --background: 0 0% 0%;              /* Pure black #000000 */
  --card: 0 0% 3.9%;                  /* Subtle elevated surface */
  --card-elevated: 0 0% 7%;           /* More prominent elevation */
  --popover: 0 0% 3.9%;               /* Dropdown backgrounds */
  
  /* Text Hierarchy */
  --foreground: 0 0% 96.1%;           /* Primary text #f5f5f7 */
  --foreground-secondary: 0 0% 63%;   /* Secondary text #a1a1a6 */
  --foreground-tertiary: 0 0% 45%;    /* Least important text */
  --muted-foreground: 0 0% 63%;
  
  /* Brand Colors */
  --primary: 262 83% 58%;             /* Purple #8B5CF6 */
  --primary-foreground: 0 0% 98%;
  --accent: 217 91% 60%;              /* Blue #3B82F6 */
  --accent-foreground: 0 0% 98%;
  
  /* Status Colors */
  --success: 142 71% 45%;             /* Green - gains */
  --destructive: 0 84% 60%;           /* Red - losses */
  --warning: 38 92% 50%;              /* Amber - alerts */
  
  /* UI Elements */
  --border: 0 0% 14.9%;               /* Subtle borders */
  --input: 0 0% 14.9%;                /* Input borders */
  --ring: 262 83% 58%;                /* Focus rings (purple) */

  --card-foreground: 0 0% 96.1%;
  --card-border: 0 0% 14.9%;

  --sidebar: 0 0% 0%;
  --sidebar-foreground: 0 0% 96.1%;
  --sidebar-border: 0 0% 14.9%;
  --sidebar-primary: 262 83% 58%;
  --sidebar-primary-foreground: 0 0% 98%;
  --sidebar-accent: 0 0% 7%;
  --sidebar-accent-foreground: 0 0% 96.1%;
  --sidebar-ring: 262 83% 58%;

  --popover-foreground: 0 0% 96.1%;
  --popover-border: 0 0% 14.9%;

  --secondary: 0 0% 7%;
  --secondary-foreground: 0 0% 96.1%;

  --muted: 0 0% 7%;
  
  --destructive-foreground: 0 0% 98%;
  --chart-1: 258 90% 75%;
  --chart-2: 280 85% 70%;
  --chart-3: 240 80% 65%;
  --chart-4: 200 75% 60%;
  --chart-5: 180 70% 55%;

  --shadow-2xs: 0px 1px 2px 0px hsl(258 90% 66% / 0.15);
  --shadow-xs: 0px 2px 4px 0px hsl(258 90% 66% / 0.18);
  --shadow-sm: 0px 3px 6px -1px hsl(258 90% 66% / 0.20), 0px 2px 4px -2px hsl(258 90% 66% / 0.15);
  --shadow: 0px 4px 8px -2px hsl(258 90% 66% / 0.22), 0px 2px 4px -2px hsl(258 90% 66% / 0.18);
  --shadow-md: 0px 6px 12px -2px hsl(258 90% 66% / 0.24), 0px 3px 6px -3px hsl(258 90% 66% / 0.20);
  --shadow-lg: 0px 10px 20px -4px hsl(258 90% 66% / 0.26), 0px 4px 8px -4px hsl(258 90% 66% / 0.22);
  --shadow-xl: 0px 16px 32px -6px hsl(258 90% 66% / 0.28), 0px 6px 12px -6px hsl(258 90% 66% / 0.24);
  --shadow-2xl: 0px 24px 48px -8px hsl(258 90% 66% / 0.30);

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {
  /* Glassmorphism effect for luxury cards (Athena spec) */
  .glass {
    background: rgba(255, 255, 255, 0.02);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border: 0.5px solid rgba(255, 255, 255, 0.08);
  }
  
  .glass-hover {
    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .glass-hover:hover {
    transform: scale(1.02);
    background: rgba(255, 255, 255, 0.05);
    border-color: rgba(139, 92, 246, 0.2);
    box-shadow: 0 8px 32px rgba(139, 92, 246, 0.15), 0 0 0 1px rgba(139, 92, 246, 0.1);
  }
  
  /* Chat message slide-in animation */
  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-slide-in {
    animation: slideIn 250ms cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* Purple pulse for loading states */
  @keyframes purplePulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }
  
  .animate-purple-pulse {
    animation: purplePulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  /* Waveform animation for voice activity */
  @keyframes waveform {
    0%, 100% {
      height: 4px;
    }
    25% {
      height: 16px;
    }
    50% {
      height: 28px;
    }
    75% {
      height: 12px;
    }
  }
  
  @keyframes waveform-fast {
    0%, 100% {
      height: 8px;
    }
    25% {
      height: 20px;
    }
    50% {
      height: 32px;
    }
    75% {
      height: 14px;
    }
  }
  
  .animate-waveform {
    animation: waveform 1.5s ease-in-out infinite;
  }
  
  .animate-waveform-fast {
    animation: waveform-fast 1s ease-in-out infinite;
  }
  
  /* Thinking dots animation */
  @keyframes thinking {
    0%, 80%, 100% {
      transform: scale(1);
      opacity: 0.5;
    }
    40% {
      transform: scale(1.3);
      opacity: 1;
    }
  }
  
  .animate-thinking {
    animation: thinking 1.4s ease-in-out infinite;
  }
  
  /* Thinking dots text effect */
  @keyframes ellipsis {
    0% { content: ""; }
    25% { content: "."; }
    50% { content: ".."; }
    75% { content: "..."; }
    100% { content: ""; }
  }
  
  .thinking-dots::after {
    content: "";
    animation: ellipsis 1.5s infinite;
  }
  
  /* Data update glow animation */
  @keyframes dataGlow {
    0% {
      box-shadow: 0 0 0 0 rgba(139, 92, 246, 0.4);
    }
    50% {
      box-shadow: 0 0 15px 5px rgba(139, 92, 246, 0.3);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(139, 92, 246, 0);
    }
  }
  
  .animate-data-glow {
    animation: dataGlow 800ms cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* Gradient accent glass (use sparingly) */
  .glass-gradient {
    background: linear-gradient(135deg, rgba(139, 92, 246, 0.1), rgba(59, 130, 246, 0.05));
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border: 0.5px solid rgba(139, 92, 246, 0.2);
  }

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    border-radius: inherit;
    z-index: -1;
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    border-radius: inherit;
    z-index: 999;
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Voice waveform animation */
  @keyframes waveform {
    0%, 100% {
      height: 4px;
    }
    50% {
      height: 24px;
    }
  }

  .animate-waveform {
    animation: waveform 0.8s ease-in-out infinite;
  }

  .animate-waveform-fast {
    animation: waveform 0.4s ease-in-out infinite;
  }

  /* Thinking dots animation */
  @keyframes thinking-dots {
    0%, 20% {
      content: '.';
    }
    40% {
      content: '..';
    }
    60%, 100% {
      content: '...';
    }
  }

  .thinking-dots::after {
    content: '';
    animation: thinking-dots 1.5s infinite;
  }

  /* Avatar Animations - Applied directly to IMG elements */
  @keyframes avatar-breathe {
    0%, 100% { transform: scale(1) translateY(0); }
    50% { transform: scale(1.03) translateY(-2px); }
  }

  @keyframes avatar-talk {
    0%, 100% { transform: scaleY(1); }
    25% { transform: scaleY(0.95); }
    75% { transform: scaleY(1.05); }
  }

  @keyframes avatar-blink {
    0%, 90%, 100% { transform: scaleY(1); }
    95% { transform: scaleY(0.85); }
  }

  @keyframes avatar-head-tilt {
    0%, 100% { transform: rotate(0deg); }
    25% { transform: rotate(-2deg); }
    75% { transform: rotate(2deg); }
  }

  @keyframes listening-pulse {
    0% {
      transform: scale(1);
      opacity: 1;
    }
    100% {
      transform: scale(1.3);
      opacity: 0;
    }
  }

  /* Avatar animation classes */
  .avatar-breathing {
    animation: avatar-breathe 4s ease-in-out infinite;
  }

  .avatar-talking {
    animation: avatar-talk 0.3s ease-in-out infinite;
  }

  .avatar-blink {
    animation: avatar-blink 10s ease-in-out infinite;
  }

  .avatar-head-tilt {
    animation: avatar-head-tilt 8s ease-in-out infinite;
  }

  .animate-listening-pulse {
    animation: listening-pulse 1.5s ease-out infinite;
  }

  .animate-breathe {
    animation: avatar-breathe 4s ease-in-out infinite;
  }

  .animate-talking {
    animation: avatar-talk 0.3s ease-in-out infinite;
  }

  .animate-blink {
    animation: avatar-blink 10s ease-in-out infinite;
  }

  .animate-head-tilt {
    animation: avatar-head-tilt 8s ease-in-out infinite;
  }

  /* Thinking pulse animation */
  @keyframes thinking-pulse {
    0%, 100% {
      opacity: 0.3;
    }
    50% {
      opacity: 1;
    }
  }

  .animate-thinking {
    animation: thinking-pulse 1.5s ease-in-out infinite;
  }
  
  /* Animation Classes for Enhanced User Experience */
  @keyframes fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  @keyframes slide-in-from-bottom {
    from { transform: translateY(20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }

  @keyframes slide-in-from-top {
    from { transform: translateY(-20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }

  @keyframes data-glow {
    0% { box-shadow: 0 0 0 0 rgba(147, 51, 234, 0); }
    50% { box-shadow: 0 0 20px 5px rgba(147, 51, 234, 0.3); }
    100% { box-shadow: 0 0 0 0 rgba(147, 51, 234, 0); }
  }

  @keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
  }

  @keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  @keyframes scale-in {
    from { transform: scale(0.95); opacity: 0; }
    to { transform: scale(1); opacity: 1; }
  }

  /* Animation utilities */
  .animate-fade-in {
    animation: fade-in 0.5s ease-out;
  }

  .animate-slide-in-from-bottom {
    animation: slide-in-from-bottom 0.5s ease-out;
  }

  .animate-slide-in-from-top {
    animation: slide-in-from-top 0.5s ease-out;
  }

  .animate-data-glow {
    animation: data-glow 0.8s ease-out;
  }

  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  .animate-spin {
    animation: spin 1s linear infinite;
  }

  .animate-scale-in {
    animation: scale-in 0.3s ease-out;
  }

  /* Card hover effects */
  .card-hover {
    transition: all 0.3s ease;
  }

  .card-hover:hover {
    transform: scale(1.02);
    box-shadow: 0 10px 40px rgba(147, 51, 234, 0.15);
  }

  /* Success animation for completed actions */
  @keyframes success-bounce {
    0% { transform: scale(0); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
  }

  .animate-success {
    animation: success-bounce 0.5s ease-out;
  }

  /* Smooth transitions for all interactive elements */
  button, a, input, textarea, select {
    transition: all 0.2s ease;
  }

  /* Focus states for accessibility */
  *:focus-visible {
    outline: 2px solid hsl(var(--primary));
    outline-offset: 2px;
    border-radius: 4px;
  }

  /* Loading skeleton animation */
  @keyframes skeleton-loading {
    0% {
      background-position: -200px 0;
    }
    100% {
      background-position: calc(200px + 100%) 0;
    }
  }

  .skeleton {
    background: linear-gradient(
      90deg,
      hsl(var(--muted) / 0.5) 0%,
      hsl(var(--muted) / 0.2) 50%,
      hsl(var(--muted) / 0.5) 100%
    );
    background-size: 200px 100%;
    animation: skeleton-loading 1.5s ease-in-out infinite;
  }

  /* Avatar Animations - Micro-emotions and breathing */
  @keyframes breathe {
    0%, 100% { 
      transform: scale(1); 
    }
    50% { 
      transform: scale(1.02); 
    }
  }

  @keyframes blink {
    0%, 90%, 100% { 
      opacity: 1; 
    }
    95% { 
      opacity: 0.2; 
    }
  }

  @keyframes subtle-head-tilt {
    0%, 100% { 
      transform: rotate(0deg); 
    }
    25% { 
      transform: rotate(-1deg); 
    }
    75% { 
      transform: rotate(1deg); 
    }
  }

  @keyframes talking {
    0%, 100% {
      transform: scale(1);
    }
    25% {
      transform: scale(1.01);
    }
    50% {
      transform: scale(1.02);
    }
    75% {
      transform: scale(1.01);
    }
  }

  @keyframes listening-pulse {
    0%, 100% {
      box-shadow: 0 0 0 0 hsl(var(--primary) / 0.4);
    }
    50% {
      box-shadow: 0 0 0 20px hsl(var(--primary) / 0);
    }
  }

  /* Avatar animation classes */
  .animate-breathe {
    animation: breathe 3s ease-in-out infinite;
  }

  .animate-blink {
    animation: blink 5s ease-in-out infinite;
  }

  .animate-head-tilt {
    animation: subtle-head-tilt 8s ease-in-out infinite;
  }

  .animate-talking {
    animation: talking 0.5s ease-in-out infinite;
  }

  .animate-listening-pulse {
    animation: listening-pulse 1.5s ease-out infinite;
  }

  /* Thinking dots animation */
  @keyframes thinking {
    0%, 80%, 100% {
      transform: scale(0.8);
      opacity: 0.5;
    }
    40% {
      transform: scale(1.2);
      opacity: 1;
    }
  }

  .animate-thinking {
    animation: thinking 1.4s ease-in-out infinite;
  }
}